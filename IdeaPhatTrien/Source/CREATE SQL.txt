DROP TABLE "main","sqlite_sequence";)


CREATE TABLE EMPLOYEE (
	ID CHAR(50) PRIMARY KEY UNIQUE,
	NAME varchar(255) NOT NULL,
	SEX CHAR(20),
	AGE INTEGER NOT NULL,
	UNIT varchar(255) NOT NULL
);

CREATE TABLE SESSION (
	ID CHAR(50) PRIMARY KEY UNIQUE,
	NAME CHAR(50) NOT NULL,
	DURATION INTEGER NOT NULL
);

CREATE TABLE SAVED_SESSION (
	ID INTEGER PRIMARY KEY AUTOINCREMENT,
	ID_EMPLOYEE CHAR(50),
	ID_SESSION CHAR(50),
		FOREIGN KEY(ID_EMPLOYEE) REFERENCES EMPLOYEE(ID),
		FOREIGN KEY(ID_SESSION) REFERENCES SESSION(ID)
);

CREATE TABLE RECORDER (
	ID DATETIME PRIMARY KEY NOTNULL,
	ID_SESSION CHAR(50),
		FOREIGN KEY(ID_SESSION) REFERENCES SESSION(ID)
);

-- 	ALOW NULL ARRIVED_TIME -> NULL THEN OFF
CREATE TABLE DETAIL_RECORD (
	ID INTEGER PRIMARY KEY AUTOINCREMENT,
	ARRIVED_TIME datetime,
	IS_BACKUP BIT,
	ID_EMPLOYEE char(50),
	ID_RECORDER char(50),
		FOREIGN KEY(ID_RECORDER) REFERENCES RECORDER(ID)
		FOREIGN KEY(ID_EMPLOYEE) REFERENCES EMPLOYEE(ID)
);


-- somekindofarray = SELECT U FROM EMPLOYEE

-- Them du lieu nhan vien can nhan dien
INSERT INTO EMPLOYEE
VALUES ("ARAM001","ahTan2","MALE",21,"CN18B-GTS");
-- Cap nhap du lieu nhan vien can nhan dien
UPDATE TEN_BANG
SET cot1 = gtri1, cot2 = gtri2...., cotN = gtriN
WHERE [DIEU_KIEN];
-- Xoa du lieu nhan vien can nhan dien
DELETE FROM table_name WHERE condition;
-- Nhan va kiem ket qua sau moi buoi cham cong de tong hop dinh ki
-- + Cham cong thanh cong -> them employee vao trong DETAIL_RECORD
-- 		muon co duoc ID_EMPLOYEE voi ID_RECORDER <- tao RECORDER luc Select EMPLOYEE if succes <= thanh cong
-- 												 <- select all ID LOAD ALL EMPLOYEE tu luc Begin the attendance
--
-- 					có được màn hình load		 <- lấy toàn bộ từ EMPLOYEE bằng cách fellall()
--												 	và toàn bộ từ SAVED_SESSION

-- somekindofarray = SELECT * FROM EMPLOYEE;
------------------------------------------------------------------------------
-- get ID, get another informations from this for LOAD FRAME, DETECTED FRAME,
		SELECT * FROM SESSION ;
		-- chay vong for MY_TEMP_ID trong array nhan duoc
			SELECT * FROM SAVED_SESSION WHERE MY_TEMP_ID = ID;
			-- LUU VAO MANG VA CO DUOC LIST NHAN VIEN THEO CA
------------------------------------LOAD FRAME--------------------------------

        SELECT * FROM EMPLOYEE
        ORDER BY UNIT

-- SELECT * FROM RECORDER;
-- SELECT * FROM DETAIL_RECORD;
-- SELECT * FROM LIST_EMPLOYEE;

SELECT DURATION FROM SESSION WHERE ID= "TEST001"



-- QUERY TO GET EMMPLOYEE DIDM'T GO TO WORK
SELECT ALL_EMPLOYEE.* FROM
	(SELECT D.ID,D.NAME,UNIT
	FROM RECORDER AS C,SAVED_SESSION AS A, EMPLOYEE AS D
	WHERE
	C.ID = "2021-06-12 23:11:08"
	AND D.ID = A.ID_EMPLOYEE
	AND A.ID_SESSION = C.ID_SESSION) AS ALL_EMPLOYEE
WHERE ALL_EMPLOYEE.ID NOT IN
		(SELECT B.ID_EMPLOYEE
		FROM DETAIL_RECORD AS B
		WHERE B.ID_RECORDER = "2021-06-12 23:11:08")
ORDER BY ALL_EMPLOYEE.ID;

-- QUERY TO GET RECORDER IN MONTH
SELECT RECORDER.ID
FROM RECORDER
WHERE RECORDER.ID BETWEEN "2021-06-11" AND "2021-06-13";

-- QUERY TO GET SUMMARY COUNT EMPLOYEE RECORD IN MONTH
-- IN HOW MANY SESSION, CAME HOW MANNY AND NOT COME HOWMANY
SELECT B.* FROM
	SAVED_SESSION AS B,
WHERE
	(SELECT RECORDER.ID FROM RECORDER WHERE RECORDER.ID BETWEEN "2021-06-11" AND "2021-06-13")

-- 	GET SESSION BY RECORDER BY TIME
SELECT *
FROM (
	SELECT B.*,A.ID_EMPLOYEE, A.ID_SESSION AS "confirm" FROM
		RECORDER AS B, SAVED_SESSION AS A
	WHERE B.ID IN (SELECT RECORDER.ID FROM RECORDER WHERE RECORDER.ID BETWEEN "2021-06-11" AND "2021-06-13")
		AND B.ID_SESSION = A.ID_SESSION
	) AS LIST_RECORD,
	DETAIL_RECORD
WHERE
		LIST_RECORD.ID = DETAIL_RECORD.ID_RECORDER
-- 	AND	LIST_RECORD.ID_EMPLOYEE = DETAIL_RECORD.ID_EMPLOYEE
ORDER BY
	LIST_RECORD.ID,LIST_RECORD.ID_EMPLOYEE

-- 	get count that employy came in SESSION
SELECT LIST_RECORD.ID_EMPLOYEE,count(LIST_RECORD.ID_EMPLOYEE) as "All_SESSION",DETAIL_RECORD.*
FROM (
	SELECT B.*,A.ID_EMPLOYEE, A.ID_SESSION AS "confirm" FROM
		RECORDER AS B, SAVED_SESSION AS A
	WHERE B.ID IN (SELECT RECORDER.ID FROM RECORDER WHERE RECORDER.ID BETWEEN "2021-06-11" AND "2021-06-15")
		AND B.ID_SESSION = A.ID_SESSION
	) AS LIST_RECORD,
	DETAIL_RECORD
WHERE
--	AND	 		LIST_RECORD.ID = DETAIL_RECORD.ID_RECORDER
LIST_RECORD.ID_EMPLOYEE = DETAIL_RECORD.ID_EMPLOYEE
-- GROUP BY
-- 	LIST_RECORD.ID_EMPLOYEE


-- 	get count RECORDER_SESSION OF employy
SELECT LIST_RECORD.*,count(LIST_RECORD.ID)
FROM (
	SELECT B.*,A.ID_EMPLOYEE, A.ID_SESSION AS "confirm" FROM
		RECORDER AS B, SAVED_SESSION AS A
	WHERE B.ID IN (SELECT RECORDER.ID FROM RECORDER WHERE RECORDER.ID BETWEEN "2021-06-11" AND "2021-06-15")
		AND B.ID_SESSION = A.ID_SESSION
	) AS LIST_RECORD
-- WHERE
-- 		LIST_RECORD.ID = DETAIL_RECORD.ID_RECORDER
-- 	AND	LIST_RECORD.ID_EMPLOYEE = DETAIL_RECORD.ID_EMPLOYEE
GROUP BY
	LIST_RECORD.ID_EMPLOYEE

-- 	check if ARAM001 in  2021-06-12 13:51:48 recorded_deatail
SELECT A.ID_EMPLOYEE
FROM SAVED_SESSION as A
WHERE A.ID_EMPLOYEE = "ARAM001"
-- 	AND A.ID_RECORDER = "2021-06-14 13:43:35"
GROUP BY
	A.ID_EMPLOYEE

SELECT *,CASE
		WHEN B.IS_BACKUP = 1 THEN
			'truee'
		WHEN B.IS_BACKUP = 0 THEN
			'false'
		ELSE
			'Not come'
		END HOW
	FROM DETAIL_RECORD AS B

-- 	get count NOT GO TO WORK OF employee
SELECT EXPORT.ID_EMPLOYEE, COUNT(*)
FROM
	(
	SELECT B.*,A.ID_EMPLOYEE FROM
		RECORDER AS B, SAVED_SESSION AS A
	WHERE B.ID IN (SELECT RECORDER.ID FROM RECORDER WHERE RECORDER.ID BETWEEN "2021-06-14 13:43:33" AND "2021-06-16")
		AND B.ID_SESSION = A.ID_SESSION
	) AS EXPORT
	LEFT JOIN
	DETAIL_RECORD AS B
		ON B.ID_RECORDER=EXPORT.ID
		AND B.ID_EMPLOYEE = EXPORT.ID_EMPLOYEE
WHERE B.IS_BACKUP IS NULL
GROUP BY EXPORT.ID_EMPLOYEE

-- 	get count GO TO WORK OF employee
SELECT EXPORT.ID_EMPLOYEE, COUNT(*)
FROM
	(
	SELECT B.*,A.ID_EMPLOYEE FROM
		RECORDER AS B, SAVED_SESSION AS A
	WHERE B.ID IN (SELECT RECORDER.ID FROM RECORDER WHERE RECORDER.ID BETWEEN "2021-06-14 13:43:33" AND "2021-06-16")
		AND B.ID_SESSION = A.ID_SESSION
	) AS EXPORT
	LEFT JOIN
	DETAIL_RECORD AS B
		ON B.ID_RECORDER=EXPORT.ID
		AND B.ID_EMPLOYEE = EXPORT.ID_EMPLOYEE
WHERE B.IS_BACKUP IS NULL
GROUP BY EXPORT.ID_EMPLOYEE


-- GET EMPLOYEE PROVE OF WORK
SELECT ALL_SESSION_TO_GO.* , IFNULL(OFF.NOT_GO_TO_WORK,0) AS "OFF_WORK", ALL_SESSION_TO_GO.ALL_SESSION - IFNULL(OFF.NOT_GO_TO_WORK,0) AS "GO_TO_WORK"
FROM
	(

			SELECT LIST_RECORD.ID_EMPLOYEE,count(LIST_RECORD.ID) AS "ALL_SESSION"
			FROM (
				SELECT B.*,A.ID_EMPLOYEE, A.ID_SESSION AS "confirm" FROM
				RECORDER AS B, SAVED_SESSION AS A
			WHERE B.ID IN (SELECT RECORDER.ID FROM RECORDER WHERE RECORDER.ID BETWEEN "2021-06-14 13:43:33" AND "2021-06-16")
				AND B.ID_SESSION = A.ID_SESSION
			) AS LIST_RECORD
			GROUP BY
				LIST_RECORD.ID_EMPLOYEE

	) AS ALL_SESSION_TO_GO

LEFT JOIN
			(

			SELECT EXPORT.ID_EMPLOYEE, COUNT(*) AS "NOT_GO_TO_WORK"
			FROM
			(SELECT B.*,A.ID_EMPLOYEE FROM
				RECORDER AS B, SAVED_SESSION AS A
			WHERE B.ID IN (SELECT RECORDER.ID FROM RECORDER WHERE RECORDER.ID BETWEEN "2021-06-14 13:43:33" AND "2021-06-16")
				AND B.ID_SESSION = A.ID_SESSION ) AS EXPORT
			LEFT JOIN
			DETAIL_RECORD AS B
				ON B.ID_RECORDER=EXPORT.ID
				AND B.ID_EMPLOYEE = EXPORT.ID_EMPLOYEE
			WHERE B.IS_BACKUP IS NULL
			GROUP BY EXPORT.ID_EMPLOYEE

		)AS OFF

ON ALL_SESSION_TO_GO.ID_EMPLOYEE = OFF.ID_EMPLOYEE